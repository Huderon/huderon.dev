---
import {getCollection, type CollectionEntry} from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";
import PostList from "@components/PostList.astro";
import Tags from "@components/Tags.astro";
import {getTagCounts} from "@lib/tags";
import Pagination from "@components/Pagination.astro";
import type {Page, GetStaticPathsOptions} from "astro";

interface Props {
	page: Page<CollectionEntry<"blog">>;
}

export async function getStaticPaths({paginate}: GetStaticPathsOptions) {
	const allPosts = await getCollection("blog");
	const sortedPosts = allPosts.sort(
		(a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime(),
	);

	return paginate(sortedPosts, {
		pageSize: 6,
	});
}

const {page} = Astro.props;
const allPosts = await getCollection("blog");
const tagCounts = getTagCounts(allPosts);
const pageTitle = "Blog";
const pathname = Astro.url.pathname.split("/");
const basePath = `/${pathname[1]}`;
---

<BaseLayout pageTitle={pageTitle}>
	<h1>{pageTitle}</h1>

	<Tags tagCounts={tagCounts} />

	<PostList posts={page.data} />

	{page.lastPage > 1 && <Pagination page={page} basePath={basePath} />}
</BaseLayout>
